# RideKit Hardware Setup
# Board: esp32-s3-devkitc-1
# Connections:

# Input Controls
# - Flywheel Resistance Rotary Encoder: GPIO18 (A), GPIO19 (B)

# Input Sensors
# - Pedal Cadence Sensor: TBD (A), TBD (B)

# Outputs
# - Flywheel Resistance PWM Controller i2c: GPIO21 (SDA), GPIO16 (SCL), flywheel_resistance_servo_i2c_channel: "0"

esphome:
  name: ridekit
  friendly_name: RideKit Exercise Bike

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: esp-idf

# Enable logging
logger:
  level: INFO

# Allow Over-The-Air updates
ota:
  platform: esphome
  

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

api: 

captive_portal:

# Enable BLE for future HR monitor support (optional for now)
esp32_ble_tracker:

# Substitutions for pin management and easy reuse
substitutions:
  # Input Controls
  flywheel_resistance_rotary_encoder_a_pin: GPIO18
  flywheel_resistance_rotary_encoder_b_pin: GPIO19
  # flywheel_resistance_up_button_pin: GPIO12
  # flywheel_resistance_down_button_pin: GPIO13
  # Outputs
  flywheel_resistance_pwm_controller_i2c_sda: GPIO21
  flywheel_resistance_pwm_controller_i2c_scl: GPIO16
  flywheel_resistance_servo_i2c_channel: "0"
  # pedal_cadence_sensor_pin: TBD

# Modular includes â€” create these files as your project grows
packages:

  pwm: !include ridekit/control/pwm_controller.yaml
  flywheel: !include ridekit/control/flywheel_resistance_servo.yaml
  encoder: !include ridekit/inputs/flywheel_resistance_rotary_encoder.yaml
  slider: !include ridekit/inputs/flywheel_resistance_slider.yaml
  inputs: !include ridekit/inputs/buttons.yaml
  sensor: !include ridekit/sensors/flywheel_resistance_sensor_feedback.yaml
  cadence: !include ridekit/sensors/cadence.yaml
  display: !include ridekit/display/screen.yaml
